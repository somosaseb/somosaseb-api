name: Test and Build artifacts

on:
  push:
    branches: [master]
    paths-ignore:
      - "bin/"
      - "public/"
      - "provision/"
      - "docker-compose*"
      - "setup.*"
      - "*.md"
      - "*.toml"
      - "Makefile"
      - "LICENSE"
      - ".gitignore"
      - ".dockerignore"
      - ".editorconfig"
      - "Dockerfile"
  pull_request:
    branches: [master]
    paths-ignore:
      - "bin/"
      - "public/"
      - "provision/"
      - "docker-compose*"
      - "setup.*"
      - "*.md"
      - "*.toml"
      - "Makefile"
      - "LICENSE"
      - ".gitignore"
      - ".dockerignore"
      - ".editorconfig"
      - "Dockerfile"
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.6

      - uses: actions/cache@v2
        with:
          path: venv
          key: ${{ runner.os }}-pip-lint

      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          test ! -d venv && python -m venv venv ||:
          source venv/bin/activate
          python -m pip install --upgrade black isort flake8

      - run: venv/bin/black --diff --color --check src/aseb tests

      - run: venv/bin/isort --diff --check src/aseb tests

      - run: venv/bin/flake8 -j4 --show-source src/aseb

  backend:
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aseb_core
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.6

      - uses: actions/cache@v2
        with:
          path: venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Install dependencies
        run: |
          test ! -d venv && python -m venv venv ||:
          source venv/bin/activate
          pip install --upgrade wheel
          pip install -r requirements-develop.txt
          python setup.py develop

      - name: Run tests
        env:
          DATABASE_URL: "postgres://postgres:postgres@localhost:${{ job.services.database.ports[5432] }}/aseb_code"
        run: |
          source venv/bin/activate
          pytest -x -vv tests

  openapi:
    runs-on: ubuntu-latest
    needs: ["backend", "lint"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.6

      - uses: actions/cache@v2
        with:
          path: venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}

      - name: Install dependencies
        run: |
          test ! -d venv && python -m venv venv ||:
          source venv/bin/activate
          pip install --upgrade wheel
          pip install -r requirements-develop.txt
          python setup.py develop

      - name: Build openapi schema
        run: |
          source venv/bin/activate
          mkdir -p out
          python src/manage.py generate_swagger --format yaml --overwrite out/swagger_v1.yml

      - name: Deploy artifacts
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: out
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
